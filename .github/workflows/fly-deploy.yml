name: Deploy to Fly

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FLY_APP_NAME: gamecocks-fb-bot   # MUST match app in fly.toml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      # Create the app every time (safe if it already exists)
      - name: Create app (idempotent)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          set -e
          flyctl apps create "$FLY_APP_NAME" || echo "App may already exist"

      # Sync COLLECT_TOKEN only if you've set it as a GitHub secret
      - name: Sync COLLECT_TOKEN to Fly (optional)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          COLLECT_TOKEN_SECRET: ${{ secrets.COLLECT_TOKEN }}
        run: |
          if [ -n "$COLLECT_TOKEN_SECRET" ]; then
            echo "Setting COLLECT_TOKEN in Fly…"
            flyctl secrets set COLLECT_TOKEN="$COLLECT_TOKEN_SECRET" --app "$FLY_APP_NAME" --yes
          else
            echo "No COLLECT_TOKEN secret set; skipping"
          fi

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only --app "$FLY_APP_NAME"

      # Add --yes for non-interactive CI
      - name: Scale web + worker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl scale count web=1 worker=1 --app "$FLY_APP_NAME" --yes

      # Kick off an initial collect so items.json isn’t empty
      - name: Kick off initial collect
        env:
          COLLECT_TOKEN_SECRET: ${{ secrets.COLLECT_TOKEN }}
        run: |
          URL="https://${{ env.FLY_APP_NAME }}.fly.dev/collect"
          if [ -n "$COLLECT_TOKEN_SECRET" ]; then
            curl -fsS -X POST -H "X-Collect-Token: $COLLECT_TOKEN_SECRET" "$URL" || true
          else
            curl -fsS -X POST "$URL" || true
          fi
