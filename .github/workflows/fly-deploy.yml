name: Deploy to Fly

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FLY_APP_NAME: gamecocks-fb-bot   # MUST match app in fly.toml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      # Create the app every time (safe if it already exists)
      - name: Create app (idempotent)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          set -e
          flyctl apps create "$FLY_APP_NAME" || echo "App may already exist"

      # (Optional) Sync a collect token into Fly secrets if you set one in GitHub
      - name: Sync COLLECT_TOKEN to Fly (optional)
        if: ${{ secrets.COLLECT_TOKEN != '' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl secrets set COLLECT_TOKEN=${{ secrets.COLLECT_TOKEN }} --app "$FLY_APP_NAME" --yes

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only --app "$FLY_APP_NAME"

      # ✅ Add --yes so CI confirms the scaling plan
      - name: Scale web + worker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl scale count web=1 worker=1 --app "$FLY_APP_NAME" --yes

      # ✅ Kick off an immediate collect so items.json isn't empty
      - name: Kick off initial collect
        run: |
          URL="https://${{ env.FLY_APP_NAME }}.fly.dev/collect"
          if [ -n "${{ secrets.COLLECT_TOKEN }}" ]; then
            curl -fsS -X POST -H "X-Collect-Token: ${{ secrets.COLLECT_TOKEN }}" "$URL" || true
          else
            curl -fsS -X POST "$URL" || true
          fi
